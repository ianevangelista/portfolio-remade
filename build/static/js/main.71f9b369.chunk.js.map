{"version":3,"sources":["components/header/Header.tsx","components/wrapper/Wrapper.tsx","utils/about/hobbies-text.ts","utils/about/date-difference.ts","utils/about/education-text.ts","utils/about/experience-text.ts","about/pic.jpg","utils/projects/project-text.ts","projects/ProjectCard.tsx","index.tsx","home/Home.tsx","about/About.tsx","projects/Projects.tsx"],"names":["Header","history","useHistory","className","href","onClick","push","target","Wrapper","children","animation","moreContent","compactAutoHeight","classNames","window","screen","width","AnimatePresence","motion","div","transition","duration","initial","opacity","animate","exit","Hobbies","title","description","getDifferenceDates","dt1","dt2","end","someDate","today","Date","getDate","getMonth","getFullYear","isToday","toLocaleString","month","vgsStartDate","vgsEndDate","bachelorStartDate","bachelorEndDate","Educations","study","school","fremtindStartDate","fremtindEndDate","infiniwellStartDate","infiniwellEndDate","Experiences","employer","MyProjects","year","github","ProjectCard","project","inverted","external","Routes","exact","path","component","useState","isLoading","setIsLoading","nextPage","setNextPage","isMounted","useRef","useEffect","current","timer","setTimeout","clearTimeout","cursor","show","Delay","ms","textDescription","negative","src","img","alt","map","hobby","e","leftProjects","rightProjects","forEach","p","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71f9b369.chunk.js","sourcesContent":["import { Link } from \"@fremtind/jkl-core\";\nimport { useHistory } from \"react-router\";\nimport \"./Header.scss\";\n\nexport const Header = () => {\n    const history = useHistory();\n    return (\n        <div className=\"header\">\n            <Link href=\"/\">\n                <p className=\"jkl-heading-1 header__title\">Portfolio</p>\n            </Link>\n            <div className=\"header__links\">\n                <Link\n                    onClick={() => {\n                        history.push(\"/about\");\n                    }}\n                    className=\"header__link\"\n                >\n                    About\n                </Link>\n                <Link\n                    onClick={() => {\n                        history.push(\"/projects\");\n                    }}\n                    className=\"header__link\"\n                >\n                    Projects\n                </Link>\n                <Link target=\"_blank\" href=\"./cv.pdf\" className=\"header__link\">\n                    Curriculum Vitae\n                </Link>\n            </div>\n        </div>\n    );\n};\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { Header } from \"../header/Header\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport \"./Wrapper.scss\";\n\ninterface Props {\n    children: ReactNode;\n    animation?: boolean;\n    moreContent?: boolean;\n    compactAutoHeight?: boolean;\n}\nexport const Wrapper = ({\n    children,\n    animation,\n    moreContent,\n    compactAutoHeight,\n}: Props) => {\n    return (\n        <div\n            className={classNames(\"wrapper__background\", {\n                \"wrapper__background--more-content\": moreContent,\n                \"wrapper__background--more-content-compact\":\n                    window.screen.width < 900 && !compactAutoHeight,\n                \"wrapper__background--more-content-compact-auto\":\n                    window.screen.width < 900 && compactAutoHeight,\n            })}\n        >\n            <Header />\n            {animation && (\n                <AnimatePresence>\n                    <motion.div\n                        className=\"wrapper__content\"\n                        transition={{ duration: 2.5 }}\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {children}\n                    </motion.div>\n                </AnimatePresence>\n            )}\n            {!animation && <div className=\"wrapper__content\">{children}</div>}\n        </div>\n    );\n};\n","interface Hobby {\n    title: string;\n    description: string;\n}\n\nexport const Hobbies: Hobby[] = [\n    {\n        title: \"Training\",\n        description:\n            \"Love staying active. Currently training to run Trondheim marathon\",\n    },\n    {\n        title: \"Football\",\n        description:\n            \"You can't find a bigger hooligan than me. Just ask all my friends\",\n    },\n    {\n        title: \"Tech\",\n        description: \"Always eager to learn something new.\",\n    },\n];\n","const isToday = (someDate: Date) => {\n    const today = new Date();\n    return (\n        someDate.getDate() === today.getDate() &&\n        someDate.getMonth() === today.getMonth() &&\n        someDate.getFullYear() === today.getFullYear()\n    );\n};\nexport const getDifferenceDates = (dt1: Date, dt2: Date) => {\n    let end;\n    if (!isToday(dt2)) {\n        end =\n            dt2.toLocaleString(\"default\", { month: \"short\" }) +\n            \" \" +\n            dt2.getFullYear();\n    } else {\n        end = \"now\";\n    }\n\n    const duration =\n        dt1.toLocaleString(\"default\", { month: \"short\" }) +\n        \" \" +\n        dt1.getFullYear() +\n        \" -  \" +\n        end;\n    return duration;\n};\n","import { getDifferenceDates } from \"./date-difference\";\n\ninterface Education {\n    study: string;\n    school: string;\n    duration: string;\n}\n\nconst vgsStartDate = new Date(2015, 7);\nconst vgsEndDate = new Date(2018, 5);\n\nconst bachelorStartDate = new Date(2018, 7);\nconst bachelorEndDate = new Date(2021, 5);\n\nconst masterStartDate = new Date(2021, 7);\nconst masterEndDate = new Date();\n\nexport const Educations: Education[] = [\n    {\n        study: \"M.Sc Computer Science\",\n        school: \"Norwegian University of Science and Technology\",\n        duration: getDifferenceDates(masterStartDate, masterEndDate),\n    },\n    {\n        study: \"B.Sc Computer Engineering\",\n        school: \"Norwegian University of Science and Technology\",\n        duration: getDifferenceDates(bachelorStartDate, bachelorEndDate),\n    },\n    {\n        study: \"General Studies\",\n        school: \"Asker Videregående skole\",\n        duration: getDifferenceDates(vgsStartDate, vgsEndDate),\n    },\n];\n","import { getDifferenceDates } from \"./date-difference\";\n\ninterface Experience {\n    title: string;\n    employer: string;\n    duration: string;\n}\n\nconst fremtindStartDate = new Date(2021, 5);\nconst fremtindEndDate = new Date(2021, 7);\n\nconst infiniwellStartDate = new Date(2020, 8);\nconst infiniwellEndDate = new Date(2021, 4);\n\nexport const Experiences: Experience[] = [\n    {\n        title: \"Summer internship\",\n        employer: \"Fremtind\",\n        duration: getDifferenceDates(fremtindStartDate, fremtindEndDate),\n    },\n    {\n        title: \"Bachelor's assignment\",\n        employer: \"Infiniwell\",\n        duration: getDifferenceDates(infiniwellStartDate, infiniwellEndDate),\n    },\n];\n","export default __webpack_public_path__ + \"static/media/pic.2ffbee07.jpg\";","export interface Project {\n    title?: string;\n    year?: string;\n    description?: string;\n    image?: string;\n    github?: string;\n}\n\nexport const MyProjects: Project[] = [\n    {\n        title: \"Portfolio\",\n        year: \"2021\",\n        description: \"First of all this website.\",\n        github: \"https://github.com/ianevangelista/portfolio-remade\",\n    },\n    {\n        title: \"Bachelor\",\n        year: \"2021\",\n        description:\n            \"An app for healthcare professionals to remote monitor patients.\",\n    },\n    {\n        title: \"GK\",\n        year: \"2021\",\n        description:\n            \"A website for my friends and I to display what movies we want to watch for the next movie night. Each user can upvote or downvote a movie wish.\",\n        github: \"https://github.com/gkonsulting/gk-client\",\n    },\n    {\n        title: \"Harmoni\",\n        year: \"2020\",\n        description:\n            \"Scrum-project in Software Engineering 2 with web applications. The main task was to develope a system for event planning\",\n        github: \"https://github.com/ianevangelista/Harmoni\",\n    },\n];\n","import { Card } from \"@fremtind/jkl-card-react\";\nimport { Link } from \"@fremtind/jkl-core\";\nimport { Project } from \"../utils/projects/project-text\";\nimport classNames from \"classnames\";\nimport \"./ProjectCard.scss\";\n\ninterface Props {\n    project: Project;\n    inverted?: boolean;\n}\nexport const ProjectCard = ({ project, inverted }: Props) => {\n    return (\n        <div\n            className={classNames(\"\", {\n                \"project-card__container\": !inverted,\n                \"project-card__container--inverted\": inverted,\n            })}\n        >\n            <Card className=\"project-card\">\n                <div className=\"project-card__title-container\">\n                    <p className=\"jkl-heading-1\">{project.title}</p>\n                </div>\n                <p className=\"jkl-layout-spacing--xs-top jkl-small\">\n                    {project.description}\n                </p>\n                {project.github && (\n                    <div className=\"jkl-layout-spacing--xs-top\">\n                        <Link\n                            external\n                            href={project.github}\n                            className=\"project-card__button \"\n                        >\n                            Github\n                        </Link>\n                    </div>\n                )}\n            </Card>\n            <div>\n                <p className=\"project-card__text project-card__text--year jkl-small\">\n                    {project.year}\n                </p>\n                <hr className=\"project-card__timeline\" />\n            </div>\n        </div>\n    );\n};\n","import ReactDOM from \"react-dom\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"@fremtind/jkl-core/core.min.css\";\nimport \"./index.scss\";\nimport { About } from \"./about/About\";\nimport { Home } from \"./home/Home\";\nimport { Projects } from \"./projects/Projects\";\n\nconst Routes = (\n    <div className=\"index\">\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/projects\" component={Projects} />\n            </Switch>\n        </Router>\n    </div>\n);\n\nReactDOM.render(Routes, document.getElementById(\"root\"));\n","import { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Loader } from \"@fremtind/jkl-loader-react\";\nimport { NavLink } from \"@fremtind/jkl-core\";\n\nimport { Wrapper } from \"../components/wrapper/Wrapper\";\nimport Typist from \"react-typist\";\n\nimport \"./Home.scss\";\n\nexport const Home = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [nextPage, setNextPage] = useState<string>(\"\");\n\n    const history = useHistory();\n    const isMounted = useRef(false);\n    useEffect(() => {\n        if (isMounted.current) {\n            const timer = setTimeout(() => {\n                setIsLoading(false);\n                history.push(\"/\" + nextPage);\n            }, 4000);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        } else {\n            isMounted.current = true;\n        }\n    }, [isLoading, history, nextPage]);\n\n    return (\n        <Wrapper>\n            <p className=\"home__title\">\n                <Typist\n                    cursor={{\n                        show: false,\n                    }}\n                >\n                    <p className=\"jkl-title\">Hi, i am Ian</p>\n                    <Typist.Delay ms={500} />\n                    <br />\n                    <p className=\"jkl-body\">and welcome to my porfolio</p>\n                    <div className=\"jkl-layout-spacing--medium-top\">\n                        <Typist.Delay ms={500} />\n                        <br />\n                        <p className=\"jkl-body\">\n                            <NavLink\n                                className=\"home__link\"\n                                onClick={() => {\n                                    setIsLoading(true);\n                                    setNextPage(\"about\");\n                                }}\n                            >\n                                Get to know me more\n                            </NavLink>\n                        </p>\n                        <Typist.Delay ms={500} />\n                        <br />\n                        <p className=\"jkl-body\">\n                            <NavLink\n                                className=\"home__link\"\n                                onClick={() => {\n                                    setIsLoading(true);\n                                    setNextPage(\"projects\");\n                                }}\n                            >\n                                View some of my projects\n                            </NavLink>\n                        </p>\n                    </div>\n                </Typist>\n                {isLoading && (\n                    <Loader\n                        className=\"jkl-layout-spacing--small-top\"\n                        textDescription=\"Loading\"\n                        negative\n                    />\n                )}\n            </p>\n        </Wrapper>\n    );\n};\n","import { Accordion, AccordionItem } from \"@fremtind/jkl-accordion-react\";\nimport { UnorderedList, ListItem } from \"@fremtind/jkl-list-react\";\n\nimport { Wrapper } from \"../components/wrapper/Wrapper\";\nimport { Hobbies } from \"../utils/about/hobbies-text\";\nimport { Educations } from \"../utils/about/education-text\";\nimport { Experiences } from \"../utils/about/experience-text\";\n\n// @ts-ignore\nimport img from \"./pic.jpg\";\nimport \"./About.scss\";\n\nexport const About = () => {\n    return (\n        <Wrapper animation compactAutoHeight>\n            <div className=\"about__content\">\n                <div>\n                    <div className=\"about__image-box\">\n                        <img className=\"about__image\" src={img} alt=\"Logo\" />\n                    </div>\n                    <div>\n                        <div className=\"jkl-layout-spacing--small-top\">\n                            <p className=\"jkl-body about\">\n                                M.Sc. Student Computer Science\n                            </p>\n                            <p className=\"jkl-body about\">\n                                Full Stack Developer\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"about__accordion-row\">\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Hobbies and interests\"\n                        >\n                            <UnorderedList>\n                                {Hobbies.map((hobby) => {\n                                    return (\n                                        <ListItem className=\"jkl-small\">\n                                            <p className=\"about__bold\">\n                                                {hobby.title}\n                                            </p>\n                                            <p>{hobby.description}</p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Education\"\n                        >\n                            <UnorderedList>\n                                {Educations.map((e) => {\n                                    return (\n                                        <ListItem className=\"jkl-small\">\n                                            <p className=\"about__bold\">\n                                                {e.study}\n                                            </p>\n                                            <p>{e.school}</p>\n                                            <p>{e.duration}</p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Experience\"\n                        >\n                            <UnorderedList>\n                                {Experiences.map((e) => {\n                                    return (\n                                        <ListItem className=\"jkl-small\">\n                                            <p className=\"about__bold\">\n                                                {e.employer}\n                                            </p>\n                                            <p>{e.title}</p>\n                                            <p>{e.duration}</p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                </div>\n            </div>\n        </Wrapper>\n    );\n};\n","import { Wrapper } from \"../components/wrapper/Wrapper\";\nimport { MyProjects, Project } from \"../utils/projects/project-text\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport \"./Projects.scss\";\n\nexport const Projects = () => {\n    const leftProjects: Project[] = [];\n    const rightProjects: Project[] = [];\n\n    MyProjects.forEach((p, i) => {\n        if ((i + 1) % 2 === 1) leftProjects.push(p);\n        else rightProjects.push(p);\n    });\n\n    return (\n        <Wrapper animation moreContent>\n            <div>\n                <p className=\"jkl-body projects__text\">Now</p>\n            </div>\n\n            <div className=\"projects__columns\">\n                <div className=\"projects__first-col\">\n                    {leftProjects.map((p) => {\n                        return <ProjectCard project={p} />;\n                    })}\n                </div>\n                <div className=\"projects__timeline\" />\n                <div className=\"projects__second-col\">\n                    {rightProjects.map((p) => {\n                        return <ProjectCard project={p} inverted />;\n                    })}\n                </div>\n            </div>\n            <div>\n                <p className=\"jkl-body projects__text\">Some time ago</p>\n            </div>\n        </Wrapper>\n    );\n};\n"],"sourceRoot":""}