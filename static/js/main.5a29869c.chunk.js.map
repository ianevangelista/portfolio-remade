{"version":3,"sources":["components/header/Header.tsx","components/wrapper/Wrapper.tsx","utils/about/hobbies-text.ts","utils/about/date-difference.ts","utils/about/education-text.ts","utils/about/experience-text.ts","about/pic.jpg","about/About.tsx","home/Home.tsx","utils/projects/project-text.ts","projects/ProjectCard.tsx","projects/Projects.tsx","projects/ImageSlideshow.tsx","projects/Project.tsx","index.tsx"],"names":["Header","history","useHistory","className","href","onClick","push","target","Wrapper","children","animation","moreContent","compactAutoHeight","darkMode","classNames","window","screen","width","AnimatePresence","motion","div","transition","duration","initial","opacity","animate","exit","Hobbies","title","description","getDifferenceDates","dt1","dt2","end","someDate","today","Date","getDate","getMonth","getFullYear","isToday","toLocaleString","month","vgsStartDate","vgsEndDate","bachelorStartDate","bachelorEndDate","Educations","study","school","fremtindStartDate","fremtindEndDate","infiniwellStartDate","infiniwellEndDate","Experiences","employer","About","useState","showPhone","setShowPhone","src","img","alt","open","map","hobby","e","Home","isLoading","setIsLoading","nextPage","setNextPage","isMounted","useRef","useEffect","current","timer","setTimeout","clearTimeout","cursor","show","Delay","ms","textDescription","negative","MyProjects","id","year","github","path","moreDescription","images","ProjectCard","project","inverted","odd","external","Projects","leftProjects","rightProjects","forEach","p","i","variants","enter","direction","x","center","zIndex","ImageSlideshow","page","setPage","imageIndex","wrap","length","paginate","newDirection","custom","type","stiffness","damping","drag","dragConstraints","left","right","dragElastic","onDragEnd","offset","velocity","swipe","Math","abs","swipePower","ProjectPage","useParams","setProject","hideImages","setHideImages","useAnimatedHeight","animationRef","find","ref","forceCompact","App","Routes","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a29869c.chunk.js","sourcesContent":["import { Link } from \"@fremtind/jkl-core\";\nimport { useHistory } from \"react-router\";\nimport \"./Header.scss\";\n\nexport const Header = () => {\n    const history = useHistory();\n    return (\n        <div className=\"header\">\n            <Link href=\"/\">\n                <p className=\"jkl-heading-1 header__title\">Portfolio</p>\n            </Link>\n            <div className=\"header__links\">\n                <Link\n                    onClick={() => {\n                        history.push(\"/about\");\n                    }}\n                    className=\"header__link\"\n                >\n                    About\n                </Link>\n                <Link\n                    onClick={() => {\n                        history.push(\"/projects\");\n                    }}\n                    className=\"header__link\"\n                >\n                    Projects\n                </Link>\n                <Link target=\"_blank\" href=\"./cv.pdf\" className=\"header__link\">\n                    Curriculum Vitae\n                </Link>\n            </div>\n        </div>\n    );\n};\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { Header } from \"../header/Header\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport \"./Wrapper.scss\";\n\ninterface Props {\n    children: ReactNode;\n    animation?: boolean;\n    moreContent?: boolean;\n    compactAutoHeight?: boolean;\n    darkMode?: boolean;\n}\nexport const Wrapper = ({\n    children,\n    animation,\n    moreContent,\n    compactAutoHeight,\n    darkMode\n}: Props) => {\n    return (\n        <div\n            className={classNames(\"wrapper__background\", {\n                \"wrapper__background--dark-mode\": darkMode,\n                \"wrapper__background--more-content\": moreContent,\n                \"wrapper__background--more-content-compact\":\n                    window.screen.width < 900 && !compactAutoHeight,\n                \"wrapper__background--more-content-compact-auto\":\n                    window.screen.width < 900 && compactAutoHeight,\n            })}\n        >\n            <Header />\n            {animation && (\n                <AnimatePresence>\n                    <motion.div\n                        className=\"wrapper__content\"\n                        transition={{ duration: 2.5 }}\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {children}\n                    </motion.div>\n                </AnimatePresence>\n            )}\n            {!animation && <div className=\"wrapper__content\">{children}</div>}\n        </div>\n    );\n};\n","interface Hobby {\n    title: string;\n    description: string;\n}\n\nexport const Hobbies: Hobby[] = [\n    {\n        title: \"Training\",\n        description:\n            \"Love staying active. Currently ran Trondheim marathon. What is next?\",\n    },\n    {\n        title: \"Football\",\n        description:\n            \"You can't find a bigger hooligan than me. Just ask all my friends\",\n    },\n    {\n        title: \"Tech\",\n        description: \"Always eager to learn something new.\",\n    },\n];\n","const isToday = (someDate: Date) => {\n    const today = new Date();\n    return (\n        someDate.getDate() === today.getDate() &&\n        someDate.getMonth() === today.getMonth() &&\n        someDate.getFullYear() === today.getFullYear()\n    );\n};\nexport const getDifferenceDates = (dt1: Date, dt2: Date) => {\n    let end;\n    if (!isToday(dt2)) {\n        end =\n            dt2.toLocaleString(\"default\", { month: \"short\" }) +\n            \" \" +\n            dt2.getFullYear();\n    } else {\n        end = \"now\";\n    }\n\n    const duration =\n        dt1.toLocaleString(\"default\", { month: \"short\" }) +\n        \" \" +\n        dt1.getFullYear() +\n        \" -  \" +\n        end;\n    return duration;\n};\n","import { getDifferenceDates } from \"./date-difference\";\n\ninterface Education {\n    study: string;\n    school: string;\n    duration: string;\n}\n\nconst vgsStartDate = new Date(2015, 7);\nconst vgsEndDate = new Date(2018, 5);\n\nconst bachelorStartDate = new Date(2018, 7);\nconst bachelorEndDate = new Date(2021, 5);\n\nconst masterStartDate = new Date(2021, 7);\nconst masterEndDate = new Date();\n\nexport const Educations: Education[] = [\n    {\n        study: \"M.Sc Computer Science\",\n        school: \"Norwegian University of Science and Technology\",\n        duration: getDifferenceDates(masterStartDate, masterEndDate),\n    },\n    {\n        study: \"B.Sc Computer Engineering\",\n        school: \"Norwegian University of Science and Technology\",\n        duration: getDifferenceDates(bachelorStartDate, bachelorEndDate),\n    },\n    {\n        study: \"General Studies\",\n        school: \"Asker Videregående skole\",\n        duration: getDifferenceDates(vgsStartDate, vgsEndDate),\n    },\n];\n","import { getDifferenceDates } from \"./date-difference\";\n\ninterface Experience {\n    title: string;\n    employer: string;\n    duration: string;\n}\n\nconst fremtindStartDate = new Date(2021, 5);\nconst fremtindEndDate = new Date(2021, 7);\n\nconst infiniwellStartDate = new Date(2020, 8);\nconst infiniwellEndDate = new Date(2021, 4);\n\nconst infiniwellJobStartDate = new Date(2021, 8);\nconst infiniwellJobEndDate = new Date();\n\nexport const Experiences: Experience[] = [\n    {\n        title: \"Part-time Software developer\",\n        employer: \"infiniwell.ai\",\n        duration: getDifferenceDates(\n            infiniwellJobStartDate,\n            infiniwellJobEndDate\n        ),\n    },\n    {\n        title: \"Summer internship\",\n        employer: \"Fremtind\",\n        duration: getDifferenceDates(fremtindStartDate, fremtindEndDate),\n    },\n    {\n        title: \"Bachelor's assignment\",\n        employer: \"infiniwell.ai\",\n        duration: getDifferenceDates(infiniwellStartDate, infiniwellEndDate),\n    },\n];\n","export default __webpack_public_path__ + \"static/media/pic.2ffbee07.jpg\";","import { useState } from \"react\";\nimport { Accordion, AccordionItem } from \"@fremtind/jkl-accordion-react\";\nimport { UnorderedList, ListItem } from \"@fremtind/jkl-list-react\";\n\nimport { Wrapper } from \"../components/wrapper/Wrapper\";\nimport { Hobbies } from \"../utils/about/hobbies-text\";\nimport { Educations } from \"../utils/about/education-text\";\nimport { Experiences } from \"../utils/about/experience-text\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// @ts-ignore\nimport img from \"./pic.jpg\";\nimport \"./About.scss\";\n\nexport const About = () => {\n    const [showPhone, setShowPhone] = useState<boolean>(false);\n    return (\n        <Wrapper animation compactAutoHeight>\n            <div className=\"about__content\">\n                <div>\n                    <div className=\"about__image-box\">\n                        <img className=\"about__image\" src={img} alt=\"Logo\" />\n                    </div>\n                    <div>\n                        <div className=\"jkl-layout-spacing--small-top\">\n                            <p className=\"jkl-body about\">\n                                M.Sc. Student Computer Science\n                            </p>\n                            <p className=\"jkl-body about\">\n                                Full Stack Developer\n                            </p>\n                            <div className=\"about__icons\">\n                                <GitHubIcon\n                                    className=\"about__icon\"\n                                    onClick={() =>\n                                        window.open(\n                                            \"https://github.com/ianevangelista\",\n                                            \"_blank\"\n                                        )\n                                    }\n                                />\n\n                                <LinkedInIcon\n                                    className=\"about__icon\"\n                                    onClick={() =>\n                                        window.open(\n                                            \"https://www.linkedin.com/in/ianevangelista/\",\n                                            \"_blank\"\n                                        )\n                                    }\n                                />\n                                <EmailIcon\n                                    className=\"about__icon\"\n                                    onClick={() => {\n                                        window.open(\n                                            \"mailto:ianevangelista1999@gmail.com?subject=Inquiry!&body=Hi, Ian!\",\n                                            \"_blank\"\n                                        );\n                                    }}\n                                />\n                                <div className=\"about__phone\">\n                                    <PhoneIphoneIcon\n                                        className=\"about__icon\"\n                                        onClick={() => setShowPhone(!showPhone)}\n                                    />\n                                    <AnimatePresence>\n                                        {showPhone && (\n                                            <motion.div\n                                                initial={{ opacity: 0 }}\n                                                animate={{ opacity: 1 }}\n                                                exit={{ opacity: 0 }}\n                                            >\n                                                <div className=\"about__phone-text\">\n                                                    +47 45049804\n                                                </div>\n                                            </motion.div>\n                                        )}\n                                    </AnimatePresence>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"about__accordion-row\">\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Hobbies and interests\"\n                        >\n                            <UnorderedList>\n                                {Hobbies.map((hobby) => {\n                                    return (\n                                        <ListItem\n                                            key={hobby.title}\n                                            className=\"jkl-small\"\n                                        >\n                                            <p className=\"about__bold\">\n                                                {hobby.title}\n                                            </p>\n                                            <p className=\"about\">\n                                                {hobby.description}\n                                            </p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Education\"\n                        >\n                            <UnorderedList>\n                                {Educations.map((e) => {\n                                    return (\n                                        <ListItem\n                                            key={e.study}\n                                            className=\"jkl-small\"\n                                        >\n                                            <p className=\"about__bold\">\n                                                {e.study}\n                                            </p>\n                                            <p className=\"about\">{e.school}</p>\n                                            <p className=\"about\">\n                                                {e.duration}\n                                            </p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                    <Accordion>\n                        <AccordionItem\n                            className=\"about__accordion-item\"\n                            title=\"Experience\"\n                        >\n                            <UnorderedList>\n                                {Experiences.map((e) => {\n                                    return (\n                                        <ListItem\n                                            key={e.title}\n                                            className=\"jkl-small\"\n                                        >\n                                            <p className=\"about__bold\">\n                                                {e.employer}\n                                            </p>\n                                            <p className=\"about\">{e.title}</p>\n                                            <p className=\"about\">\n                                                {e.duration}\n                                            </p>\n                                        </ListItem>\n                                    );\n                                })}\n                            </UnorderedList>\n                        </AccordionItem>\n                    </Accordion>\n                </div>\n            </div>\n        </Wrapper>\n    );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Loader } from \"@fremtind/jkl-loader-react\";\nimport { NavLink } from \"@fremtind/jkl-core\";\n\nimport { Wrapper } from \"../components/wrapper/Wrapper\";\nimport Typist from \"react-typist\";\n\nimport \"./Home.scss\";\n\nexport const Home = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [nextPage, setNextPage] = useState<string>(\"\");\n\n    const history = useHistory();\n    const isMounted = useRef(false);\n    useEffect(() => {\n        if (isMounted.current) {\n            const timer = setTimeout(() => {\n                setIsLoading(false);\n                history.push(\"/\" + nextPage);\n            }, 4000);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        } else {\n            isMounted.current = true;\n        }\n    }, [isLoading, history, nextPage]);\n\n    return (\n        <Wrapper compactAutoHeight>\n            <div className=\"home__title\">\n                <Typist\n                    cursor={{\n                        show: false,\n                    }}\n                >\n                    <p className=\"jkl-title\">Hi, i am Ian</p>\n                    <Typist.Delay ms={500} />\n                    <br />\n                    <p className=\"jkl-body\">and welcome to my porfolio</p>\n                    <div className=\"jkl-layout-spacing--medium-top\">\n                        <Typist.Delay ms={500} />\n                        <br />\n                        <p className=\"jkl-body\">\n                            <NavLink\n                                className=\"home__link\"\n                                onClick={() => {\n                                    setIsLoading(true);\n                                    setNextPage(\"about\");\n                                }}\n                            >\n                                Get to know me more\n                            </NavLink>\n                        </p>\n                        <Typist.Delay ms={500} />\n                        <br />\n                        <p className=\"jkl-body\">\n                            <NavLink\n                                className=\"home__link\"\n                                onClick={() => {\n                                    setIsLoading(true);\n                                    setNextPage(\"projects\");\n                                }}\n                            >\n                                View some of my projects\n                            </NavLink>\n                        </p>\n                    </div>\n                </Typist>\n                {isLoading && (\n                    <Loader\n                        className=\"jkl-layout-spacing--small-top\"\n                        textDescription=\"Loading\"\n                        negative\n                    />\n                )}\n            </div>\n        </Wrapper>\n    );\n};\n","export interface Project {\n    id: string;\n    title?: string;\n    year?: string;\n    description?: string;\n    images?: string[];\n    github?: string;\n    path?: string;\n    moreDescription?: string;\n}\n\nexport const MyProjects: Project[] = [\n    {\n        id: \"portfolio\",\n        title: \"Portfolio\",\n        year: \"2021\",\n        description:\n            \"First of all this website to display some of my recent projects.\",\n        github: \"https://github.com/ianevangelista/portfolio-remade\",\n        path: \"/projects/portfolio\",\n        moreDescription:\n            \"A website to show you a litte about myself and what I have been up to. I wanted this website to be simple and clean so that it wouldn´t overwhelm the reader.\",\n    },\n    {\n        id: \"bachelor\",\n        title: \"Bachelor\",\n        year: \"2021\",\n        path: \"/projects/bachelor\",\n        description:\n            \"An app for healthcare professionals to remote monitor patients.\",\n        moreDescription:\n            \"Infiniwell is an AI company that three other students and I worked with during our bachelor´s assignment. Their plan is to contribute to digitalization of health care by automating patient diagnostics with the help of artificial intelligence and patient monitors that streams data directly to healthcare profressionals. In our thesis we described our development of a mobile application for Infiniwell. The mobile application recieves data from patient monitors through a cloud-based service. Infiniwell's goal is to streamline healthcare professionals workday by decreasing time spent on administrative tasks, and assist in clinical desicion making. To reach this goal, healthcare professionals need a useful and user friendly mobile application.\",\n        // images: [\n        //     `/Infiniwell/IMG_4010.jpg`,\n        //     `/Infiniwell/IMG_4011.jpg`,\n        //     `/Infiniwell/IMG_4012.jpg`,\n        //     `/Infiniwell/IMG_4013.jpg`,\n        //     `/Infiniwell/IMG_4014.jpg`,\n        //     `/Infiniwell/IMG_4015.jpg`,\n        //     `/Infiniwell/IMG_4016.jpg`,\n        //     `/Infiniwell/IMG_4017.jpg`,\n        //     `/Infiniwell/IMG_4018.jpg`,\n        //     `/Infiniwell/IMG_4019.jpg`,\n        //     `/Infiniwell/IMG_4020.jpg`,\n        //     `/Infiniwell/IMG_4021.jpg`,\n        //     `/Infiniwell/IMG_4022.jpg`,\n        //     `/Infiniwell/IMG_4023.jpg`,\n        //     `/Infiniwell/IMG_4024.jpg`,\n        //     `/Infiniwell/IMG_4025.jpg`,\n        //     `/Infiniwell/IMG_4026.jpg`,\n        //     `/Infiniwell/IMG_4027.jpg`,\n        //     `/Infiniwell/IMG_4028.jpg`,\n        //     `/Infiniwell/IMG_4029.jpg`,\n        //     `/Infiniwell/IMG_4030.jpg`,\n        //     `/Infiniwell/IMG_4031.jpg`,\n        //     `/Infiniwell/IMG_4032.jpg`,\n        //     `/Infiniwell/IMG_4033.jpg`,\n        //     `/Infiniwell/IMG_4034.jpg`,\n        //     `/Infiniwell/IMG_4035.jpg`,\n        //     `/Infiniwell/IMG_4036.jpg`,\n        //     `/Infiniwell/IMG_4037.jpg`,\n        //     `/Infiniwell/IMG_4038.jpg`,\n        //     `/Infiniwell/IMG_4039.jpg`,\n        //     `/Infiniwell/IMG_4040.jpg`,\n        // ],\n    },\n    {\n        id: \"gk\",\n        title: \"GK\",\n        year: \"2021\",\n        path: \"/projects/gk\",\n        description:\n            \"A website for my friends and I to display what movies we want to watch for the next movie night.\",\n        github: \"https://github.com/gkonsulting/gk-client\",\n        moreDescription:\n            \"A fun little side-project I developed during the pandemic. As I lived with three other classmates and the only company we had was each other, we tended to watch a lot of movies together. As we never could agree to a movie, I decided to create this website to display all our movie wishes. It uses open APIs to show a trailer of the movie typed in and to get a score of the movie somewhat close to IMDB. Each logged-in user can vote up or down for a movie. I also experimented with this website by using GraphQL with React, TypeScript and Next.js for server-side-rendering.\",\n        images: [`/GK/movies.png`, `/GK/addmovie.png`, `/GK/movie.png`],\n    },\n    {\n        id: \"harmoni\",\n        title: \"Harmoni\",\n        year: \"2020\",\n        path: \"/projects/harmoni\",\n        description:\n            \"A system for event planning. A user can create an event and organise what everything from artist to artists´ riders.\",\n        github: \"https://github.com/ianevangelista/Harmoni\",\n        images: [\n            `/Harmoni/harmoni.png`,\n            `/Harmoni/profile.png`,\n            `/Harmoni/event.png`,\n            `/Harmoni/events.png`,\n            `/Harmoni/calendar.png`,\n        ],\n        moreDescription:\n            \"Team scrum-project in Software Engineering 2 with web applications. The team consisted of 10 students and we worked with a Scrum-master and a product owner. The main task was to develope a system for event planning. A demo is available by the use of Firebase and Heroku.\",\n    },\n    {\n        id: \"community-news\",\n        title: \"Community News\",\n        year: \"2019\",\n        description:\n            \"My first ever full-stack web-project. Not the greatest visuals, however this project shows how much I have evolved and learned throughout the years.\",\n        github: \"https://github.com/ianevangelista/Harmoni\",\n        path: \"/projects/community-news\",\n        moreDescription:\n            \"Even though this was not my finest work, it certainly was my first work! I really enjoyed creating this fictional news page as it taught me how to build a full-stack project from scratch.\",\n        images: [\n            `/News/news.jpg`,\n            `/News/article.jpg`,\n            `/News/article2.jpg`,\n            `/News/comments.jpg`,\n            `/News/category.jpg`,\n            `/News/register.jpg`,\n        ],\n    },\n];\n","import { useHistory } from \"react-router-dom\";\nimport { Card } from \"@fremtind/jkl-card-react\";\nimport { Link } from \"@fremtind/jkl-core\";\nimport { Project } from \"../utils/projects/project-text\";\nimport classNames from \"classnames\";\nimport \"./ProjectCard.scss\";\n\ninterface Props {\n    project: Project;\n    inverted?: boolean;\n    odd?: boolean;\n}\nexport const ProjectCard = ({ project, inverted, odd }: Props) => {\n    const history = useHistory();\n    return (\n        <div\n            className={classNames(\"project-card\", {\n                \"project-card--spacing\": inverted,\n            })}\n        >\n            <Card>\n                <div className=\"project-card__title-container\">\n                    <p className=\"jkl-heading-1\">{project.title}</p>\n                </div>\n                <p className=\"jkl-layout-spacing--xs-top jkl-small\">\n                    {project.description}\n                </p>\n                <div className=\"project-card__actions-container\">\n                    {project.github && (\n                        <div className=\"jkl-layout-spacing--xs-top\">\n                            <Link\n                                external\n                                target=\"_blank\"\n                                href={project.github}\n                                className=\"project-card__button\"\n                            >\n                                Github\n                            </Link>\n                        </div>\n                    )}\n                    <div className=\"jkl-layout-spacing--xs-top\">\n                        <Link\n                            onClick={() => {\n                                history.push(`${project.path}`);\n                            }}\n                            className=\"project-card__button\"\n                        >\n                            Read more\n                        </Link>\n                    </div>\n                </div>\n            </Card>\n        </div>\n    );\n};\n","import { Wrapper } from \"../components/wrapper/Wrapper\";\nimport { MyProjects, Project } from \"../utils/projects/project-text\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport \"./Projects.scss\";\n\nexport const Projects = () => {\n    const leftProjects: Project[] = [];\n    const rightProjects: Project[] = [];\n\n    MyProjects.forEach((p, i) => {\n        if ((i + 1) % 2 === 1) leftProjects.push(p);\n        else rightProjects.push(p);\n    });\n\n    return (\n        <Wrapper animation moreContent>\n            <div className=\"projects\">\n                <div className=\"projects__timeline--container\">\n                    <p className=\"jkl-body projects__text\">Now</p>\n\n                    <div className=\"projects__timeline--line\" />\n                    <p className=\"jkl-body projects__text\">Some time ago</p>\n                </div>\n                <div className=\"projects__projects--column\">\n                    {MyProjects.map((p, i) => {\n                        return (\n                            <ProjectCard\n                                inverted={(i + 1) % 2 !== 1}\n                                key={p.id}\n                                project={p}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </Wrapper>\n    );\n};\n","import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { wrap } from \"popmotion\";\nimport \"./ImageSlideshow.scss\";\n\nconst variants = {\n    enter: (direction: number) => {\n        return {\n            x: direction > 0 ? 1000 : -1000,\n            opacity: 0,\n        };\n    },\n    center: {\n        zIndex: 1,\n        x: 0,\n        opacity: 1,\n    },\n    exit: (direction: number) => {\n        return {\n            zIndex: 0,\n            x: direction < 0 ? 1000 : -1000,\n            opacity: 0,\n        };\n    },\n};\n\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\nconst swipeConfidenceThreshold = 10000;\nconst swipePower = (offset: number, velocity: number) => {\n    return Math.abs(offset) * velocity;\n};\n\ninterface Props {\n    images: string[];\n}\n\nexport const ImageSlideshow = ({ images }: Props) => {\n    const [[page, direction], setPage] = useState([0, 0]);\n\n    // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\n    // then wrap that within 0-2 to find our image ID in the array below. By passing an\n    // absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\n    // detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\n    const imageIndex = wrap(0, images.length, page);\n\n    const paginate = (newDirection: number) => {\n        setPage([page + newDirection, newDirection]);\n    };\n\n    return (\n        <>\n            <AnimatePresence initial={false} custom={direction}>\n                <motion.img\n                    key={page}\n                    src={images[imageIndex]}\n                    custom={direction}\n                    variants={variants}\n                    initial=\"enter\"\n                    animate=\"center\"\n                    exit=\"exit\"\n                    transition={{\n                        x: { type: \"spring\", stiffness: 300, damping: 30 },\n                        opacity: { duration: 0.2 },\n                    }}\n                    drag=\"x\"\n                    dragConstraints={{ left: 0, right: 0 }}\n                    dragElastic={1}\n                    onDragEnd={(e, { offset, velocity }) => {\n                        const swipe = swipePower(offset.x, velocity.x);\n\n                        if (swipe < -swipeConfidenceThreshold) {\n                            paginate(1);\n                        } else if (swipe > swipeConfidenceThreshold) {\n                            paginate(-1);\n                        }\n                    }}\n                />\n            </AnimatePresence>\n            <div className=\"next\" onClick={() => paginate(1)}>\n                {\"‣\"}\n            </div>\n            <div className=\"prev\" onClick={() => paginate(-1)}>\n                {\"‣\"}\n            </div>\n        </>\n    );\n};\n","import { TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { Link } from \"@fremtind/jkl-core\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Wrapper } from \"../components/wrapper/Wrapper\";\nimport { MyProjects, Project } from \"../utils/projects/project-text\";\nimport { ImageSlideshow } from \"./ImageSlideshow\";\n\nimport \"./Project.scss\";\n\ninterface ParamTypes {\n    id: string;\n}\nexport const ProjectPage = () => {\n    let { id } = useParams<ParamTypes>();\n    const [project, setProject] = useState<Project>();\n    const [hideImages, setHideImages] = useState<boolean>(true);\n    const [animationRef] = useAnimatedHeight<HTMLDivElement>(hideImages);\n\n    useEffect(() => {\n        setProject(\n            MyProjects.find((p) => {\n                return p.id === id;\n            })\n        );\n    }, [id]);\n\n    return (\n        <Wrapper darkMode animation compactAutoHeight>\n            <div className=\"project__title-row\">\n                <p className=\"jkl-heading-1\">{project?.title}</p>\n                <Link\n                    className=\"project__github\"\n                    external\n                    href={project?.github}\n                    target=\"_blank\"\n                >\n                    Github\n                </Link>\n            </div>\n            <div\n                className={`project__animation-wrapper ${\n                    !hideImages && \"project__animation-wrapper--hidden\"\n                }`}\n                ref={animationRef}\n            >\n                <p className=\"jkl-heading-2 project__description\">\n                    {project?.moreDescription}\n                </p>\n            </div>\n            {project?.images && (\n                <TertiaryButton\n                    forceCompact\n                    className=\"jkl-layout-spacing--xs-top jkl-layout-spacing--medium-bottom project__button\"\n                    onClick={() => setHideImages(!hideImages)}\n                >\n                    {hideImages ? \" View images\" : \"Hide images\"}\n                </TertiaryButton>\n            )}\n            {!hideImages && project?.images && (\n                <div className=\"project__slideshow-container\">\n                    <ImageSlideshow images={project?.images} />\n                </div>\n            )}\n        </Wrapper>\n    );\n};\n","import ReactDOM from \"react-dom\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport \"@fremtind/jkl-core/core.min.css\";\nimport \"./index.scss\";\nimport { About } from \"./about/About\";\nimport { Home } from \"./home/Home\";\nimport { Projects } from \"./projects/Projects\";\nimport { ProjectPage } from \"./projects/Project\";\n\nconst App = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path={\"/about\"}>\n                    <About />\n                </Route>\n                <Route path={\"/projects/:id\"}>\n                    <ProjectPage />\n                </Route>\n                <Route path={\"/projects\"}>\n                    <Projects />\n                </Route>\n\n                <Route path={\"/\"}>\n                    <Home />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nconst Routes = (\n    <div className=\"index\">\n        <Router basename={process.env.PUBLIC_URL + \"/\"}>\n            <App />\n        </Router>\n    </div>\n);\n\nReactDOM.render(Routes, document.getElementById(\"root\"));\n"],"sourceRoot":""}